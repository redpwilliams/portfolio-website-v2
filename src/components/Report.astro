---
import type { ReportType } from '@schemas'

import { TbPencilCode } from 'react-icons/tb'

import { Icon } from '@components'
import { formatDate } from '@util'

interface Props {
  report: ReportType
}

const { report } = Astro.props

const { day, month, year } = formatDate(report.date_published)
report.date_published = `${month} ${day}, ${year}`
---

<li class='report-container'>
  <a href={'/reports/' + report.slug} title={report.title}>
    <div class='content'>
      <Icon style={{ pointerEvents: 'none', cursor: 'default' }} iconLabel='Pencil icon'>
        <TbPencilCode className='icon' style={{ scale: '2', strokeWidth: '1.3' }} />
      </Icon>
      <h4>{report.title}</h4>
      <p>{report.description}</p>
    </div>
    <div class='metadata'>
      <span>{report.read_time} min read</span>
      <span>{report.date_published}</span>
    </div>
  </a>
</li>
<script>
  // Apply Icon gradient on container hover, instead of icon hover

  const reportComponents = Array.from(document.querySelectorAll('.report-container'))
  reportComponents.forEach((report, index) => {
    // Give each report an index
    report.id = 'report-' + index

    // Add styles for the gradient
    const hoverOnContainerStyles = document.createElement('style')
    hoverOnContainerStyles.innerHTML = `
      .report-container:hover stop:first-child {
        stop-color: var(--gradient-start);
      }

      .report-container:hover stop:last-child {
        stop-color: var(--gradient-end);
      }
    
    `
    report.appendChild(hoverOnContainerStyles)
  })
</script>
<style lang='scss'>
  .report-container {
    background-color: #191919;
    padding: 20px;
    border-radius: 10px;
    transition: 0.5s ease;

    a {
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      height: 100%;
    }

    &:hover,
    &:focus {
      transform: translateY(-6px);
    }
  }

  h4 {
    font-size: 1.1rem;
    color: var(--text-main);
    margin: 2rem 0;
    font-weight: 500;
  }

  p {
    font-size: 0.9rem;
    margin-bottom: 7px;
  }

  .metadata {
    color: var(--text-gray-dark);
    margin: 10px 0;
    display: flex;
    justify-content: space-between;
    font-family: var(--font-mono);
    font-size: 0.9rem;
  }
</style>
