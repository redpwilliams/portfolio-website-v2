---
import type { Props as $, Block as BlockType } from 'astro-portabletext/types'
import { Block } from 'astro-portabletext/components'
// import '@styles/gist-dark-mode.css'

export type Props = $<BlockType>

const props = Astro.props
const html: string = await Astro.slots.render('default')
console.log('--> ' + html)
let gistLink
if (html.startsWith('https://gist.github.com/')) gistLink = html
---

{
  gistLink ? (
    <script is:inline src={gistLink} />
  ) : (
    <Block class='sdfs' {...props}>
      <slot />
    </Block>
  )
}
<style>
  * {
    color: var(--text-main);
  }
  h1 {
    font-size: 1.5rem;
    font-weight: 500;
    margin-bottom: 15px;
  }

  h2 {
    font-size: 1.1rem;
    font-weight: 500;
    margin-bottom: 10px;
  }

  p,
  blockquote {
    margin-bottom: 30px;
    color: var(--text-gray-light);
  }

  blockquote {
    padding-left: 1em;
    line-height: 1.6;
    position: relative;

    &::before {
      position: absolute;
      content: '';
      height: 100%;
      width: 3px;
      background: var(--gradient);
      left: 0;
    }
  }
</style>
<script>
  const headers = document.querySelectorAll('.content h1')
  headers.forEach((h1) => {
    h1.id = h1.innerHTML
  })
</script>
